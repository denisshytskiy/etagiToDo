{"ast":null,"code":"import { getAllTasks } from \"../apiService\";\nimport moment from 'moment';\nexport var TASKS_ON_WEEK = \"TASKS_ON_WEEK\";\nexport var DUMP_WEEK = \"DUMP_WEEK\";\nexport var SWITCH_WEEK = \"SWITCH_WEEK\";\n\nvar searchTasks = function searchTasks(dateStart) {\n  return getAllTasks().filter(function (task) {\n    return moment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === dateStart;\n  }).sort(function (a, b) {\n    return moment(a.dateStart, \"YYYY-MM-DDTHH:mm\").format('X') - moment(b.dateStart, \"YYYY-MM-DDTHH:mm\").format('X');\n  });\n};\n\nexport var dumpWeek = function dumpWeek() {\n  return function (dispatch) {\n    var firstWeekDate = moment().isoWeekday(1).format(\"DD-MM-YYYY\");\n    var lastWeekDate = moment().isoWeekday(7).format(\"DD-MM-YYYY\");\n    var tasksOnWeek = [];\n\n    for (var i = 0; i < 7; i++) {\n      var date = moment(firstWeekDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n      tasksOnWeek.push({\n        date: date,\n        tasks: searchTasks(date)\n      });\n    }\n\n    dispatch({\n      type: TASKS_ON_WEEK,\n      payload: tasksOnWeek\n    });\n    dispatch({\n      type: DUMP_WEEK,\n      payload: {\n        firstWeekDate: firstWeekDate,\n        lastWeekDate: lastWeekDate\n      }\n    });\n  };\n};\nexport var changeWeek = function changeWeek(weekDays) {\n  return function (dispatch) {\n    var selectFirst = weekDays.selectFirst,\n        selectLast = weekDays.selectLast,\n        side = weekDays.side;\n    var firstWeekDate;\n    var lastWeekDate;\n\n    switch (side) {\n      case 'next':\n        {\n          firstWeekDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, 'week').format(\"DD-MM-YYYY\");\n          lastWeekDate = moment(selectLast, \"DD-MM-YYYY\").add(1, 'week').format(\"DD-MM-YYYY\");\n          break;\n        }\n\n      case 'prev':\n        {\n          firstWeekDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, 'week').format(\"DD-MM-YYYY\");\n          lastWeekDate = moment(selectLast, \"DD-MM-YYYY\").subtract(1, 'week').format(\"DD-MM-YYYY\");\n          break;\n        }\n    }\n\n    var tasksOnWeek = [];\n\n    for (var i = 0; i < 7; i++) {\n      var date = moment(firstWeekDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n      tasksOnWeek.push({\n        date: date,\n        tasks: searchTasks(date)\n      });\n    }\n\n    dispatch({\n      type: TASKS_ON_WEEK,\n      payload: tasksOnWeek\n    });\n    dispatch({\n      type: SWITCH_WEEK,\n      payload: {\n        firstWeekDate: firstWeekDate,\n        lastWeekDate: lastWeekDate\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/actions/CalendarWeekAction.js"],"names":["getAllTasks","moment","TASKS_ON_WEEK","DUMP_WEEK","SWITCH_WEEK","searchTasks","dateStart","filter","task","format","sort","a","b","dumpWeek","dispatch","firstWeekDate","isoWeekday","lastWeekDate","tasksOnWeek","i","date","add","push","tasks","type","payload","changeWeek","weekDays","selectFirst","selectLast","side","subtract"],"mappings":"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","sourcesContent":["import {getAllTasks} from \"../apiService\";\nimport moment from 'moment';\n\nexport const TASKS_ON_WEEK = \"TASKS_ON_WEEK\";\nexport const DUMP_WEEK = \"DUMP_WEEK\";\nexport const SWITCH_WEEK = \"SWITCH_WEEK\";\n\nconst searchTasks = (dateStart) => getAllTasks().filter( task =>\n\tmoment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === dateStart\n).sort(function(a, b){\n\treturn moment(a.dateStart, \"YYYY-MM-DDTHH:mm\").format('X')-moment(b.dateStart, \"YYYY-MM-DDTHH:mm\").format('X')\n});\n\nexport const dumpWeek = () => dispatch => {\n\tconst firstWeekDate = moment().isoWeekday(1).format(\"DD-MM-YYYY\");\n\tconst lastWeekDate =  moment().isoWeekday(7).format(\"DD-MM-YYYY\");\n\tconst tasksOnWeek = [];\n\tfor (let i = 0; i < 7; i++) {\n\t\tconst date = moment(firstWeekDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n\t\ttasksOnWeek.push({\n\t\t\tdate,\n\t\t\ttasks: searchTasks(date)})\n\t}\n\tdispatch({\n\t\ttype: TASKS_ON_WEEK,\n\t\tpayload: tasksOnWeek\n\t});\n\tdispatch({\n\t\ttype: DUMP_WEEK,\n\t\tpayload: { firstWeekDate, lastWeekDate }\n\t})\n};\n\nexport const changeWeek = (weekDays) => dispatch => {\n\tconst {selectFirst, selectLast, side} = weekDays;\n\tlet firstWeekDate;\n\tlet lastWeekDate;\n\tswitch (side) {\n\t\tcase 'next': {\n\t\t\tfirstWeekDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, 'week').format(\"DD-MM-YYYY\");\n\t\t\tlastWeekDate = moment(selectLast, \"DD-MM-YYYY\").add(1, 'week').format(\"DD-MM-YYYY\");\n\t\t\tbreak;\n\t\t}\n\t\tcase 'prev': {\n\t\t\tfirstWeekDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, 'week').format(\"DD-MM-YYYY\");\n\t\t\tlastWeekDate = moment(selectLast, \"DD-MM-YYYY\").subtract(1, 'week').format(\"DD-MM-YYYY\");\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst tasksOnWeek = [];\n\tfor (let i = 0; i < 7; i++) {\n\t\tconst date = moment(firstWeekDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n\t\ttasksOnWeek.push({\n\t\t\tdate,\n\t\t\ttasks: searchTasks(date)})\n\t}\n\tdispatch({\n\t\ttype: TASKS_ON_WEEK,\n\t\tpayload: tasksOnWeek\n\t});\n\tdispatch({\n\t\ttype: SWITCH_WEEK,\n\t\tpayload: { firstWeekDate, lastWeekDate }\n\t})\n};\n"]},"metadata":{},"sourceType":"module"}