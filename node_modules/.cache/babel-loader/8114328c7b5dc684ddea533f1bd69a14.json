{"ast":null,"code":"import _objectSpread from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport uuid from 'uuid/v4';\nimport moment from 'moment';\n\nvar searchTasksForOneDay = function searchTasksForOneDay(date) {\n  return getAllTasks().filter(function (task) {\n    return moment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === date;\n  });\n};\n\nexport var getAllTasks = function getAllTasks(filter) {\n  var tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n  var filterType = filter.filterType,\n      filterProps = filter.filterProps;\n  var filterTasks = [];\n\n  switch (filterType) {\n    case 'all':\n      filterTasks.push.apply(filterTasks, _toConsumableArray(tasks.sort(function (a, b) {\n        return moment(a.dateStart, \"YYYY-MM-DDTHH:mm\").format('X') - moment(b.dateStart, \"YYYY-MM-DDTHH:mm\").format('X');\n      })));\n\n    case 'day':\n      filterTasks.push.apply(filterTasks, _toConsumableArray(searchTasksForOneDay(filterProps)));\n  }\n\n  return filterTasks;\n};\nexport var postTask = function postTask(body) {\n  var tasks = getAllTasks();\n\n  var newTask = _objectSpread({\n    id: uuid()\n  }, body);\n\n  tasks.push(newTask);\n  var serialTasks = JSON.stringify(tasks);\n  localStorage.setItem(\"tasks\", serialTasks);\n};\nexport var putTask = function putTask(body) {\n  var tasks = getAllTasks();\n  var newTasks = tasks.map(function (task) {\n    return task.id === body.id ? body : task;\n  });\n  var serialTasks = JSON.stringify(newTasks);\n  localStorage.setItem(\"tasks\", serialTasks);\n};\nexport var deleteTask = function deleteTask(id) {\n  var tasks = getAllTasks().filter(function (task) {\n    return task.id !== id;\n  });\n  var serialTasks = JSON.stringify(tasks);\n  localStorage.setItem(\"tasks\", serialTasks);\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/apiService.js"],"names":["uuid","moment","searchTasksForOneDay","date","getAllTasks","filter","task","dateStart","format","tasks","JSON","parse","localStorage","getItem","filterType","filterProps","filterTasks","push","sort","a","b","postTask","body","newTask","id","serialTasks","stringify","setItem","putTask","newTasks","map","deleteTask"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAoB,QAApB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,IAAD;AAAA,SAAUC,WAAW,GAAGC,MAAd,CAAsB,UAAAC,IAAI;AAAA,WAChEL,MAAM,CAACK,IAAI,CAACC,SAAN,EAAiB,kBAAjB,CAAN,CAA2CC,MAA3C,CAAkD,YAAlD,MAAoEL,IADJ;AAAA,GAA1B,CAAV;AAAA,CAA7B;;AAIA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AACtC,MAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAA3D;AADsC,MAE9BC,UAF8B,GAEFT,MAFE,CAE9BS,UAF8B;AAAA,MAElBC,WAFkB,GAEFV,MAFE,CAElBU,WAFkB;AAGtC,MAAMC,WAAW,GAAG,EAApB;;AACA,UAAQF,UAAR;AACC,SAAK,KAAL;AACCE,MAAAA,WAAW,CAACC,IAAZ,OAAAD,WAAW,qBAASP,KAAK,CAACS,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC5C,eAAOnB,MAAM,CAACkB,CAAC,CAACZ,SAAH,EAAc,kBAAd,CAAN,CAAwCC,MAAxC,CAA+C,GAA/C,IAAoDP,MAAM,CAACmB,CAAC,CAACb,SAAH,EAAc,kBAAd,CAAN,CAAwCC,MAAxC,CAA+C,GAA/C,CAA3D;AACA,OAFmB,CAAT,EAAX;;AAGD,SAAK,KAAL;AACCQ,MAAAA,WAAW,CAACC,IAAZ,OAAAD,WAAW,qBAASd,oBAAoB,CAACa,WAAD,CAA7B,EAAX;AANF;;AAQA,SAAOC,WAAP;AACA,CAbM;AAeP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACjC,MAAMb,KAAK,GAAGL,WAAW,EAAzB;;AACA,MAAMmB,OAAO;AACZC,IAAAA,EAAE,EAAExB,IAAI;AADI,KAETsB,IAFS,CAAb;;AAIAb,EAAAA,KAAK,CAACQ,IAAN,CAAWM,OAAX;AACA,MAAME,WAAW,GAAGf,IAAI,CAACgB,SAAL,CAAejB,KAAf,CAApB;AACAG,EAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BF,WAA9B;AACA,CATM;AAWP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACN,IAAD,EAAU;AAChC,MAAMb,KAAK,GAAGL,WAAW,EAAzB;AACA,MAAMyB,QAAQ,GAAGpB,KAAK,CAACqB,GAAN,CAAU,UAAAxB,IAAI;AAAA,WAAKA,IAAI,CAACkB,EAAL,KAAYF,IAAI,CAACE,EAAlB,GAAwBF,IAAxB,GAA+BhB,IAAnC;AAAA,GAAd,CAAjB;AACA,MAAMmB,WAAW,GAAGf,IAAI,CAACgB,SAAL,CAAeG,QAAf,CAApB;AACAjB,EAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BF,WAA9B;AACA,CALM;AAOP,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACP,EAAD,EAAQ;AACjC,MAAMf,KAAK,GAAGL,WAAW,GAAGC,MAAd,CAAqB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACkB,EAAL,KAAYA,EAAhB;AAAA,GAAzB,CAAd;AACA,MAAMC,WAAW,GAAGf,IAAI,CAACgB,SAAL,CAAejB,KAAf,CAApB;AACAG,EAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BF,WAA9B;AACA,CAJM","sourcesContent":["import uuid from 'uuid/v4';\nimport moment from  'moment';\n\nconst searchTasksForOneDay = (date) => getAllTasks().filter( task =>\n\tmoment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === date\n);\n\nexport const getAllTasks = (filter) => {\n\tconst tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n\tconst { filterType, filterProps } = filter;\n\tconst filterTasks = [];\n\tswitch (filterType) {\n\t\tcase 'all':\n\t\t\tfilterTasks.push(...tasks.sort(function(a, b){\n\t\t\t\treturn moment(a.dateStart, \"YYYY-MM-DDTHH:mm\").format('X')-moment(b.dateStart, \"YYYY-MM-DDTHH:mm\").format('X')\n\t\t\t}));\n\t\tcase 'day':\n\t\t\tfilterTasks.push(...searchTasksForOneDay(filterProps));\n\t}\n\treturn filterTasks;\n};\n\nexport const postTask = (body) => {\n\tconst tasks = getAllTasks();\n\tconst newTask = {\n\t\tid: uuid(),\n\t\t...body\n\t};\n\ttasks.push(newTask);\n\tconst serialTasks = JSON.stringify(tasks);\n\tlocalStorage.setItem(\"tasks\", serialTasks);\n};\n\nexport const putTask = (body) => {\n\tconst tasks = getAllTasks();\n\tconst newTasks = tasks.map(task => (task.id === body.id) ? body : task);\n\tconst serialTasks = JSON.stringify(newTasks);\n\tlocalStorage.setItem(\"tasks\", serialTasks);\n};\n\nexport const deleteTask = (id) => {\n\tconst tasks = getAllTasks().filter(task => task.id !== id);\n\tconst serialTasks = JSON.stringify(tasks);\n\tlocalStorage.setItem(\"tasks\", serialTasks);\n};\n"]},"metadata":{},"sourceType":"module"}