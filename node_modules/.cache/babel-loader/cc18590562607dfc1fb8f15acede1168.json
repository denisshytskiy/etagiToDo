{"ast":null,"code":"import { deleteTask, getAllTasks } from \"../apiService\";\nimport moment from 'moment';\nimport { CLEAN_FORM, EDIT_TASK, IS_OPEN_FORM } from \"./listTasksAction\";\nexport var TASKS = \"GET_TASKS\";\nexport var DUMP = \"DUMP_MONTH\";\nexport var SWITCH = \"SWITCH_MONTH\";\nexport var cleanForm = function cleanForm() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAN_FORM\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var delTask = function delTask(id) {\n  return function (dispatch) {\n    deleteTask(id);\n    var tasks = getAllTasks();\n    dispatch({\n      type: TASKS,\n      payload: tasks\n    });\n  };\n};\nexport var editTask = function editTask(id) {\n  return function (dispatch) {\n    var tasks = getAllTasks().filter(function (t) {\n      return t.id === id;\n    })[0];\n    dispatch({\n      type: EDIT_TASK,\n      payload: tasks\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var dumpMonth = function dumpMonth() {\n  return function (dispatch) {\n    var daysInMonth = moment().daysInMonth();\n    var firstMonthDate = moment().date(1).format(\"DD-MM-YYYY\");\n    var lastMonthDate = moment().date(daysInMonth).format(\"DD-MM-YYYY\");\n    dispatch({\n      type: TASKS,\n      payload: getAllTasks({\n        filterType: 'monthGroup',\n        filterProps: firstMonthDate\n      })\n    });\n    dispatch({\n      type: DUMP,\n      payload: {\n        firstMonthDate: firstMonthDate,\n        lastMonthDate: lastMonthDate\n      }\n    });\n  };\n};\nexport var changeMonth = function changeMonth(monthDays) {\n  return function (dispatch) {\n    var daysInMonth = moment().daysInMonth();\n    var selectFirst = monthDays.selectFirst,\n        selectLast = monthDays.selectLast,\n        side = monthDays.side;\n    var firstMonthDate;\n    var lastMonthDate;\n\n    switch (side) {\n      case 'next':\n        {\n          firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, 'month').format(\"DD-MM-YYYY\");\n          lastMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").date(daysInMonth).format(\"DD-MM-YYYY\");\n          break;\n        }\n\n      case 'prev':\n        {\n          firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, 'month').format(\"DD-MM-YYYY\");\n          lastMonthDate = moment(selectLast, \"DD-MM-YYYY\").subtract(1, 'month').date(daysInMonth).format(\"DD-MM-YYYY\");\n          break;\n        }\n    }\n\n    dispatch({\n      type: TASKS,\n      payload: getAllTasks({\n        filterType: 'monthGroup',\n        filterProps: firstMonthDate\n      })\n    });\n    dispatch({\n      type: SWITCH,\n      payload: {\n        firstMonthDate: firstMonthDate,\n        lastMonthDate: lastMonthDate\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/actions/CalendarMonthAction.js"],"names":["deleteTask","getAllTasks","moment","CLEAN_FORM","EDIT_TASK","IS_OPEN_FORM","TASKS","DUMP","SWITCH","cleanForm","dispatch","type","payload","delTask","id","tasks","editTask","filter","t","dumpMonth","daysInMonth","firstMonthDate","date","format","lastMonthDate","filterType","filterProps","changeMonth","monthDays","selectFirst","selectLast","side","add","subtract"],"mappings":"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","sourcesContent":["import {deleteTask, getAllTasks} from \"../apiService\";\nimport moment from 'moment';\nimport {CLEAN_FORM, EDIT_TASK, IS_OPEN_FORM} from \"./listTasksAction\";\n\nexport const TASKS = \"GET_TASKS\";\nexport const DUMP = \"DUMP_MONTH\";\nexport const SWITCH = \"SWITCH_MONTH\";\n\nexport const cleanForm = () => dispatch => {\n\tdispatch({ type: CLEAN_FORM });\n\tdispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const delTask = (id) => dispatch => {\n\tdeleteTask(id);\n\tconst tasks = getAllTasks();\n\tdispatch({ type: TASKS, payload: tasks })\n};\n\nexport const editTask = (id) => dispatch => {\n\tconst tasks = getAllTasks().filter(t => t.id === id)[0];\n\tdispatch({ type: EDIT_TASK, payload: tasks });\n\tdispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const dumpMonth = () => dispatch => {\n\tconst daysInMonth = moment().daysInMonth();\n\tconst firstMonthDate = moment().date(1).format(\"DD-MM-YYYY\");\n\tconst lastMonthDate = moment().date(daysInMonth).format(\"DD-MM-YYYY\");\n\tdispatch({\n\t\ttype: TASKS,\n\t\tpayload: getAllTasks({filterType: 'monthGroup', filterProps: firstMonthDate})\n\t});\n\tdispatch({\n\t\ttype: DUMP,\n\t\tpayload: { firstMonthDate, lastMonthDate }\n\t})\n};\n\nexport const changeMonth = (monthDays) => dispatch => {\n\tconst daysInMonth = moment().daysInMonth();\n\tconst {selectFirst, selectLast, side} = monthDays;\n\tlet firstMonthDate;\n\tlet lastMonthDate;\n\tswitch (side) {\n\t\tcase 'next': {\n\t\t\tfirstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, 'month').format(\"DD-MM-YYYY\");\n\t\t\tlastMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").date(daysInMonth).format(\"DD-MM-YYYY\");\t\t\tbreak;\n\t\t}\n\t\tcase 'prev': {\n\t\t\tfirstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, 'month').format(\"DD-MM-YYYY\");\n\t\t\tlastMonthDate = moment(selectLast, \"DD-MM-YYYY\").subtract(1, 'month').date(daysInMonth).format(\"DD-MM-YYYY\");\n\t\t\tbreak;\n\t\t}\n\t}\n\tdispatch({\n\t\ttype: TASKS,\n\t\tpayload: getAllTasks({filterType: 'monthGroup', filterProps: firstMonthDate})\n\t});\n\tdispatch({\n\t\ttype: SWITCH,\n\t\tpayload: { firstMonthDate, lastMonthDate }\n\t})\n};\n"]},"metadata":{},"sourceType":"module"}