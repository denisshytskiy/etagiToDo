{"ast":null,"code":"import _objectSpread from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware, routerActions } from 'connected-react-router';\nimport createRootReducer from '../reducers';\nvar history = createHashHistory();\nvar rootReducer = createRootReducer(history);\n\nvar configureStore = function configureStore(initialState) {\n  // Redux Configuration\n  var middleware = [];\n  var enhancers = []; // Thunk Middleware\n\n  middleware.push(thunk); // Router Middleware\n\n  var router = routerMiddleware(history);\n  middleware.push(router); // Redux DevTools Configuration\n\n  var actionCreators = _objectSpread({}, routerActions); // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n\n  /* eslint-disable no-underscore-dangle */\n\n\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    // Options: http://extension.remotedev.io/docs/API/Arguments.html\n    actionCreators: actionCreators\n  }) : compose;\n  /* eslint-enable no-underscore-dangle */\n  // Apply Middleware & Compose Enhancers\n\n  enhancers.push(applyMiddleware.apply(void 0, middleware));\n  var enhancer = composeEnhancers.apply(void 0, enhancers); // Create Store\n\n  var store = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept('../reducers', // eslint-disable-next-line global-require\n    function () {\n      return store.replaceReducer(require('../reducers').default);\n    });\n  }\n\n  return store;\n};\n\nexport default {\n  configureStore: configureStore,\n  history: history\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/store/configureStore.dev.js"],"names":["createStore","applyMiddleware","compose","thunk","createHashHistory","routerMiddleware","routerActions","createRootReducer","history","rootReducer","configureStore","initialState","middleware","enhancers","push","router","actionCreators","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","module","hot","accept","replaceReducer","require","default"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,wBAAhD;AACA,OAAOC,iBAAP,MAA8B,aAA9B;AAEA,IAAMC,OAAO,GAAGJ,iBAAiB,EAAjC;AAEA,IAAMK,WAAW,GAAGF,iBAAiB,CAACC,OAAD,CAArC;;AAEA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAkB;AACvC;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,SAAS,GAAG,EAAlB,CAHuC,CAKvC;;AACAD,EAAAA,UAAU,CAACE,IAAX,CAAgBX,KAAhB,EANuC,CAQvC;;AACA,MAAMY,MAAM,GAAGV,gBAAgB,CAACG,OAAD,CAA/B;AACAI,EAAAA,UAAU,CAACE,IAAX,CAAgBC,MAAhB,EAVuC,CAYvC;;AACA,MAAMC,cAAc,qBACfV,aADe,CAApB,CAbuC,CAgBvC;;AACA;;;AACA,MAAMW,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,GACrBD,MAAM,CAACC,oCAAP,CAA4C;AAC1C;AACAH,IAAAA,cAAc,EAAdA;AAF0C,GAA5C,CADqB,GAKrBd,OALJ;AAMA;AAEA;;AACAW,EAAAA,SAAS,CAACC,IAAV,CAAeb,eAAe,MAAf,SAAmBW,UAAnB,CAAf;AACA,MAAMQ,QAAQ,GAAGH,gBAAgB,MAAhB,SAAoBJ,SAApB,CAAjB,CA5BuC,CA8BvC;;AACA,MAAMQ,KAAK,GAAGrB,WAAW,CAACS,WAAD,EAAcE,YAAd,EAA4BS,QAA5B,CAAzB;;AAEA,MAAIE,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CACE,aADF,EAEE;AACA;AAAA,aAAMH,KAAK,CAACI,cAAN,CAAqBC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA5C,CAAN;AAAA,KAHF;AAKD;;AAED,SAAON,KAAP;AACD,CA1CD;;AA4CA,eAAe;AAAEX,EAAAA,cAAc,EAAdA,cAAF;AAAkBF,EAAAA,OAAO,EAAPA;AAAlB,CAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createHashHistory } from 'history';\nimport { routerMiddleware, routerActions } from 'connected-react-router';\nimport createRootReducer from '../reducers';\n\nconst history = createHashHistory();\n\nconst rootReducer = createRootReducer(history);\n\nconst configureStore = (initialState) => {\n  // Redux Configuration\n  const middleware = [];\n  const enhancers = [];\n\n  // Thunk Middleware\n  middleware.push(thunk);\n\n  // Router Middleware\n  const router = routerMiddleware(history);\n  middleware.push(router);\n\n  // Redux DevTools Configuration\n  const actionCreators = {\n    ...routerActions\n  };\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Options: http://extension.remotedev.io/docs/API/Arguments.html\n        actionCreators\n      })\n    : compose;\n  /* eslint-enable no-underscore-dangle */\n\n  // Apply Middleware & Compose Enhancers\n  enhancers.push(applyMiddleware(...middleware));\n  const enhancer = composeEnhancers(...enhancers);\n\n  // Create Store\n  const store = createStore(rootReducer, initialState, enhancer);\n\n  if (module.hot) {\n    module.hot.accept(\n      '../reducers',\n      // eslint-disable-next-line global-require\n      () => store.replaceReducer(require('../reducers').default)\n    );\n  }\n\n  return store;\n};\n\nexport default { configureStore, history };\n"]},"metadata":{},"sourceType":"module"}