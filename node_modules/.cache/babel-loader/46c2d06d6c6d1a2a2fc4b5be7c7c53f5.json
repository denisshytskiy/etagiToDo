{"ast":null,"code":"import { getAllTasks } from \"../apiService\";\nimport moment from 'moment';\nexport var TASKS_ON_MONTH = \"TASKS_ON_MONTH\";\nexport var RESET_MONTH = \"RESET_MONTH\";\n\nvar searchTasks = function searchTasks(dateStart) {\n  return getAllTasks().filter(function (task) {\n    return moment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === dateStart;\n  }).sort(function (a, b) {\n    return moment(a.dateStart, \"YYYY-MM-DDTHH:mm\").format('X') - moment(b.dateStart, \"YYYY-MM-DDTHH:mm\").format('X');\n  });\n};\n\nvar createDaysMonth = function createDaysMonth(selectDay) {\n  var daysInMonth = moment(selectDay, \"DD-MM-YYYY\").daysInMonth();\n  var days = [];\n\n  for (var i = 1; i <= daysInMonth; i++) {\n    days.push(moment(selectDay, \"DD-MM-YYYY\").date(i).format(\"DD-MM-YYYY\"));\n  }\n\n  return days;\n};\n\nexport var resetMonth = function resetMonth() {\n  return function (dispatch) {\n    var daysInMonth = moment().daysInMonth();\n    var firstMonthDate = moment().date(1).format(\"DD-MM-YYYY\");\n    var lastMonthDate = moment().date(daysInMonth).format(\"DD-MM-YYYY\");\n    var tasksOnMonth = [];\n\n    for (var i = 0; i < 31; i++) {\n      var date = moment(firstMonthDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n      tasksOnMonth.push({\n        date: date,\n        tasks: searchTasks(date)\n      });\n    }\n\n    console.log(tasksOnMonth);\n    dispatch({\n      type: TASKS_ON_MONTH,\n      payload: tasksOnMonth\n    });\n    dispatch({\n      type: RESET_MONTH,\n      payload: {\n        daysInMonth: daysInMonth,\n        firstMonthDate: firstMonthDate,\n        lastMonthDate: lastMonthDate\n      }\n    });\n  };\n};\nexport var changeWeek = function changeWeek(monthDays) {\n  return function (dispatch) {\n    var selectFirst = monthDays.selectFirst,\n        selectLast = monthDays.selectLast,\n        side = monthDays.side;\n    var firstMonthDate;\n    var lastMonthDate;\n\n    switch (side) {\n      case 'next':\n        {\n          firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, 'month').format(\"DD-MM-YYYY\");\n          lastMonthDate = moment(selectLast, \"DD-MM-YYYY\").add(1, 'month').format(\"DD-MM-YYYY\");\n          break;\n        }\n\n      case 'prev':\n        {\n          firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, 'month').format(\"DD-MM-YYYY\");\n          lastMonthDate = moment(selectLast, \"DD-MM-YYYY\").subtract(1, 'month').format(\"DD-MM-YYYY\");\n          break;\n        }\n    }\n\n    var tasksOnMonth = [];\n\n    for (var i = 0; i < 31; i++) {\n      var date = moment(firstMonthDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n      tasksOnMonth.push({\n        date: date,\n        tasks: searchTasks(date)\n      });\n    }\n\n    dispatch({\n      type: TASKS_ON_MONTH,\n      payload: tasksOnMonth\n    });\n  };\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/actions/CalendarMonthAction.js"],"names":["getAllTasks","moment","TASKS_ON_MONTH","RESET_MONTH","searchTasks","dateStart","filter","task","format","sort","a","b","createDaysMonth","selectDay","daysInMonth","days","i","push","date","resetMonth","dispatch","firstMonthDate","lastMonthDate","tasksOnMonth","add","tasks","console","log","type","payload","changeWeek","monthDays","selectFirst","selectLast","side","subtract"],"mappings":"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","sourcesContent":["import {getAllTasks} from \"../apiService\";\nimport moment from 'moment';\n\nexport const TASKS_ON_MONTH = \"TASKS_ON_MONTH\";\nexport const RESET_MONTH = \"RESET_MONTH\";\n\nconst searchTasks = (dateStart) => getAllTasks().filter( task =>\n\tmoment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === dateStart\n).sort(function(a, b){\n\treturn moment(a.dateStart, \"YYYY-MM-DDTHH:mm\").format('X')-moment(b.dateStart, \"YYYY-MM-DDTHH:mm\").format('X')\n});\n\n\nconst createDaysMonth = (selectDay) => {\n\tconst daysInMonth = moment(selectDay, \"DD-MM-YYYY\").daysInMonth();\n\tconst days = [];\n\tfor (var i = 1; i <= daysInMonth; i++){\n\t\tdays.push(moment(selectDay, \"DD-MM-YYYY\").date(i).format(\"DD-MM-YYYY\"))\n\t}\n\treturn days\n};\n\nexport const resetMonth = () => dispatch => {\n\tconst daysInMonth = moment().daysInMonth();\n\tconst firstMonthDate = moment().date(1).format(\"DD-MM-YYYY\");\n\tconst lastMonthDate = moment().date(daysInMonth).format(\"DD-MM-YYYY\");\n\tconst tasksOnMonth = [];\n\tfor (let i = 0; i < 31; i++) {\n\t\tconst date = moment(firstMonthDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n\t\ttasksOnMonth.push({\n\t\t\tdate,\n\t\t\ttasks: searchTasks(date)})\n\t}\n\tconsole.log(tasksOnMonth);\n\tdispatch({\n\t\ttype: TASKS_ON_MONTH,\n\t\tpayload: tasksOnMonth\n\t});\n\tdispatch({\n\t\ttype: RESET_MONTH,\n\t\tpayload: { daysInMonth, firstMonthDate, lastMonthDate }\n\t})\n};\n\nexport const changeWeek = (monthDays) => dispatch => {\n\tconst {selectFirst, selectLast, side} = monthDays;\n\tlet firstMonthDate;\n\tlet lastMonthDate;\n\tswitch (side) {\n\t\tcase 'next': {\n\t\t\tfirstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, 'month').format(\"DD-MM-YYYY\");\n\t\t\tlastMonthDate = moment(selectLast, \"DD-MM-YYYY\").add(1, 'month').format(\"DD-MM-YYYY\");\n\t\t\tbreak;\n\t\t}\n\t\tcase 'prev': {\n\t\t\tfirstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, 'month').format(\"DD-MM-YYYY\");\n\t\t\tlastMonthDate = moment(selectLast, \"DD-MM-YYYY\").subtract(1, 'month').format(\"DD-MM-YYYY\");\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst tasksOnMonth = [];\n\tfor (let i = 0; i < 31; i++) {\n\t\tconst date = moment(firstMonthDate, \"DD-MM-YYYY\").add(i, 'day').format(\"DD-MM-YYYY\");\n\t\ttasksOnMonth.push({\n\t\t\tdate,\n\t\t\ttasks: searchTasks(date)})\n\t}\n\tdispatch({\n\t\ttype: TASKS_ON_MONTH,\n\t\tpayload: tasksOnMonth\n\t});\n};\n"]},"metadata":{},"sourceType":"module"}