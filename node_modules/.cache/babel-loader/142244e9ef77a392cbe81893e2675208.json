{"ast":null,"code":"import _toConsumableArray from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { getAllTasks, deleteTask, putTask, postTask } from \"../apiService\";\nimport moment from \"moment\";\nexport var TASKS = \"GET_TASKS\";\nexport var FILTER_TASKS = \"FILTER_TASKS\";\nexport var EDIT_TASK = \"EDIT_TASK\";\nexport var CLEAN_FORM = \"CLEAN_FORM\";\nexport var IS_OPEN_FORM = \"IS_OPEN_FORM\";\nexport var SWITCH = \"SWITCH_BUTTON\";\n\nvar witchButton = function witchButton(type) {\n  switch (type) {\n    case 'all':\n      return {\n        filterType: 'all'\n      };\n\n    case 'today':\n      return {\n        filterType: 'day',\n        filterProps: moment().format(\"DD-MM-YYYY\")\n      };\n\n    case 'tomorrow':\n      return {\n        filterType: 'day',\n        filterProps: moment().add(1, 'day').format(\"DD-MM-YYYY\")\n      };\n\n    case 'week':\n      return {\n        filterType: 'weekList'\n      };\n\n    case 'month':\n      return {\n        filterType: 'monthList'\n      };\n  }\n};\n\nexport var addTask = function addTask(body, type) {\n  return function (dispatch) {\n    var cleanBody = _objectSpread({}, body);\n\n    delete cleanBody.type;\n    postTask(cleanBody);\n    var items = getAllTasks(witchButton(type));\n    dispatch({\n      type: TASKS,\n      payload: items\n    });\n    dispatch({\n      type: CLEAN_FORM\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: false\n    });\n  };\n};\nexport var delTask = function delTask(id, type) {\n  return function (dispatch) {\n    deleteTask(id);\n    var tasks = getAllTasks(witchButton(type));\n    dispatch({\n      type: TASKS,\n      payload: _toConsumableArray(tasks)\n    });\n  };\n};\nexport var editTask = function editTask(id) {\n  return function (dispatch) {\n    var tasks = getAllTasks().filter(function (t) {\n      return t.id === id;\n    })[0];\n    dispatch({\n      type: EDIT_TASK,\n      payload: tasks\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var editTaskFromForm = function editTaskFromForm(body, type) {\n  return function (dispatch) {\n    var cleanBody = _objectSpread({}, body);\n\n    delete cleanBody.type;\n    putTask(cleanBody);\n    console.log(witchButton(type));\n    var tasks = getAllTasks(witchButton(type));\n    dispatch({\n      type: TASKS,\n      payload: tasks\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var cleanForm = function cleanForm() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAN_FORM\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var searchTasks = function searchTasks(filter) {\n  return function (dispatch) {\n    var selectedButton = filter.selectedButton;\n    var tasks = getAllTasks(filter);\n    dispatch({\n      type: TASKS,\n      payload: tasks\n    });\n    dispatch({\n      type: SWITCH,\n      payload: selectedButton\n    });\n  };\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/actions/listTasksAction.js"],"names":["getAllTasks","deleteTask","putTask","postTask","moment","TASKS","FILTER_TASKS","EDIT_TASK","CLEAN_FORM","IS_OPEN_FORM","SWITCH","witchButton","type","filterType","filterProps","format","add","addTask","body","dispatch","cleanBody","items","payload","delTask","id","tasks","editTask","filter","t","editTaskFromForm","console","log","cleanForm","searchTasks","selectedButton"],"mappings":"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","sourcesContent":["import {getAllTasks, deleteTask, putTask, postTask} from \"../apiService\";\nimport moment from \"moment\";\n\nexport const TASKS = \"GET_TASKS\";\nexport const FILTER_TASKS = \"FILTER_TASKS\";\nexport const EDIT_TASK = \"EDIT_TASK\";\nexport const CLEAN_FORM = \"CLEAN_FORM\";\nexport const IS_OPEN_FORM = \"IS_OPEN_FORM\";\nexport const SWITCH = \"SWITCH_BUTTON\";\n\nconst witchButton = (type) => {\n  switch (type) {\n    case 'all':\n      return { filterType: 'all'};\n    case 'today':\n      return { filterType: 'day', filterProps: moment().format(\"DD-MM-YYYY\")};\n    case 'tomorrow':\n      return { filterType: 'day', filterProps: moment().add(1, 'day').format(\"DD-MM-YYYY\")};\n    case 'week':\n      return { filterType: 'weekList'};\n    case 'month':\n      return { filterType: 'monthList'};\n  }\n};\n\nexport const addTask = (body, type) => dispatch => {\n  const cleanBody = {...body};\n  delete cleanBody.type;\n  postTask(cleanBody);\n  const items = getAllTasks(witchButton(type));\n  dispatch({ type: TASKS, payload: items });\n  dispatch({ type: CLEAN_FORM });\n  dispatch({ type: IS_OPEN_FORM, payload: false});\n};\n\nexport const delTask = (id, type) => dispatch => {\n  deleteTask(id);\n  const tasks = getAllTasks(witchButton(type));\n  dispatch({ type: TASKS, payload: [...tasks] })\n};\n\nexport const editTask = (id) => dispatch => {\n  const tasks = getAllTasks().filter(t => t.id === id)[0];\n  dispatch({ type: EDIT_TASK, payload: tasks });\n  dispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const editTaskFromForm = (body, type) => dispatch => {\n  const cleanBody = {...body};\n  delete cleanBody.type;\n  putTask(cleanBody);\n  console.log(witchButton(type));\n  const tasks = getAllTasks(witchButton(type));\n  dispatch({ type: TASKS, payload: tasks });\n  dispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const cleanForm = () => dispatch => {\n  dispatch({ type: CLEAN_FORM });\n  dispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const searchTasks = (filter) => dispatch => {\n  const { selectedButton } = filter;\n  const tasks = getAllTasks(filter);\n  dispatch({\n    type: TASKS,\n    payload: tasks\n  });\n  dispatch({\n    type: SWITCH,\n    payload: selectedButton\n  });\n};\n"]},"metadata":{},"sourceType":"module"}