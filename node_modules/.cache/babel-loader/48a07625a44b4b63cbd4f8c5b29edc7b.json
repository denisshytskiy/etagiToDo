{"ast":null,"code":"import _classCallCheck from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/den/project/etagiToDo/src/components/ListTasks.js\";\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport moment from 'moment';\nimport FormTask from '../containers/FormTaskPage';\nimport './css/ListTask.css';\n\nvar ListTasks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListTasks, _Component);\n\n  function ListTasks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListTasks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListTasks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.editTask = function (id) {\n      var editTask = _this.props.editTask;\n      editTask(id);\n    };\n\n    _this.deleteTask = function (id) {\n      var delTask = _this.props.delTask;\n      delTask(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(ListTasks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var searchTasks = this.props.searchTasks;\n      searchTasks({\n        filterType: 'all'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tasks = _this$props.tasks,\n          formTask = _this$props.formTask,\n          addTask = _this$props.addTask,\n          sendEditTask = _this$props.sendEditTask,\n          searchTasks = _this$props.searchTasks,\n          searchTodayTasks = _this$props.searchTodayTasks,\n          searchTomorrowTasks = _this$props.searchTomorrowTasks,\n          searchWeekTasks = _this$props.searchWeekTasks,\n          searchMonthTasks = _this$props.searchMonthTasks,\n          cleanForm = _this$props.cleanForm,\n          selectedButton = _this$props.selectedButton;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(FormTask, {\n        sendEditTask: sendEditTask,\n        addTask: addTask,\n        formTask: formTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'all' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            filterType: 'all'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\\u0412\\u0441\\u0435\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'today' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            filterType: 'today',\n            filterProps: moment().format(\"DD-MM-YYYY\")\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'tomorrow' ? \"contained\" : \"outlined\",\n        onClick: searchTomorrowTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0432\\u0442\\u0440\\u0430\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'week' ? \"contained\" : \"outlined\",\n        onClick: searchWeekTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\u041D\\u0435\\u0434\\u0435\\u043B\\u044F\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'month' ? \"contained\" : \"outlined\",\n        onClick: searchMonthTasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\u041C\\u0435\\u0441\\u044F\\u0446\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        onClick: cleanForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        className: \"tableHeadName\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(TableCell, {\n        className: \"tableHeadDescription\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), React.createElement(TableCell, {\n        className: \"tableHeadDate\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"), React.createElement(TableCell, {\n        className: \"tableHeadDate\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"), React.createElement(TableCell, {\n        className: \"tableHeadDate\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\u0412\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, tasks.map(function (t) {\n        return React.createElement(TableRow, {\n          key: t.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, t.name), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, t.description), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, moment(t.dateStart).format('DD.MM.YYYY HH:mm')), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, moment(t.dateEnd).format('DD.MM.YYYY HH:mm')), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          color: \"secondary\",\n          badgeContent: t.important,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }))), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this2.editTask(t.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), React.createElement(Button, {\n          size: \"small\",\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this2.deleteTask(t.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));\n      })))));\n    }\n  }]);\n\n  return ListTasks;\n}(Component);\n\nexport default ListTasks;","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/components/ListTasks.js"],"names":["React","Component","Paper","Table","TableBody","TableCell","TableHead","TableRow","Button","Divider","Badge","MailIcon","moment","FormTask","ListTasks","editTask","id","props","deleteTask","delTask","searchTasks","filterType","tasks","formTask","addTask","sendEditTask","searchTodayTasks","searchTomorrowTasks","searchWeekTasks","searchMonthTasks","cleanForm","selectedButton","filterProps","format","map","t","name","description","dateStart","dateEnd","important"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport moment from 'moment';\nimport FormTask from '../containers/FormTaskPage';\n\nimport './css/ListTask.css'\n\nclass ListTasks extends Component {\n  componentDidMount() {\n    const { searchTasks } = this.props;\n    searchTasks({filterType: 'all'});\n  }\n  \n  editTask = (id) => {\n    const { editTask } = this.props;\n    editTask(id);\n  };\n  \n  deleteTask = (id) => {\n    const { delTask } = this.props;\n    delTask(id);\n  };\n  \n  render() {\n    const {\n      tasks, formTask, addTask, sendEditTask,\n      searchTasks, searchTodayTasks, searchTomorrowTasks,\n      searchWeekTasks, searchMonthTasks, cleanForm, selectedButton\n    } = this.props;\n    return (\n      <div>\n        <Paper>\n        <div>\n          <FormTask\n            sendEditTask={sendEditTask}\n            addTask={addTask}\n            formTask={formTask}\n          />\n        </div>\n          <div className=\"buttonGroup\">\n            <div>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'all' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({filterType: 'all'})}\n              >\n                Все\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'today' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({filterType: 'today', filterProps: moment().format(\"DD-MM-YYYY\")})}\n              >\n                Сегодня\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'tomorrow' ? \"contained\" : \"outlined\"}\n                onClick={searchTomorrowTasks}\n              >\n                Завтра\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'week' ? \"contained\" : \"outlined\"}\n                onClick={searchWeekTasks}\n              >\n                Неделя\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'month' ? \"contained\" : \"outlined\"}\n                onClick={searchMonthTasks}\n              >\n                Месяц\n              </Button>\n            </div>\n            <div>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={cleanForm}\n              >\n                Создать задачу\n              </Button>\n            </div>\n          </div>\n          <Divider/>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell className=\"tableHeadName\" align=\"center\">\n                  Название\n                </TableCell>\n                <TableCell className=\"tableHeadDescription\" align=\"center\">\n                  Описание\n                </TableCell>\n                <TableCell className=\"tableHeadDate\" align=\"center\">\n                  Дата начала\n                </TableCell>\n                <TableCell className=\"tableHeadDate\" align=\"center\">\n                  Дата окончания\n                </TableCell>\n                <TableCell className=\"tableHeadDate\" align=\"center\">\n                  Важность\n                </TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tasks.map(t =>\n                <TableRow key={t.id}>\n                  <TableCell align=\"center\">{t.name}</TableCell>\n                  <TableCell align=\"center\">{t.description}</TableCell>\n                  <TableCell align=\"center\">{moment(t.dateStart).format('DD.MM.YYYY HH:mm')}</TableCell>\n                  <TableCell align=\"center\">{moment(t.dateEnd).format('DD.MM.YYYY HH:mm')}</TableCell>\n                  <TableCell align=\"center\">\n                    <Badge color=\"secondary\" badgeContent={t.important}>\n                      <MailIcon />\n                    </Badge></TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => this.editTask(t.id)}\n                    >\n                      Редактировать\n                    </Button>\n                    <Button\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={() => this.deleteTask(t.id)}\n                    >\n                      Удалить\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default ListTasks;\n"]},"metadata":{},"sourceType":"module"}