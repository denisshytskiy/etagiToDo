{"ast":null,"code":"import { getAllTasks } from \"../apiService\";\nimport moment from 'moment';\n\nvar searchTasks = function searchTasks(dateStart) {\n  return getAllTasks().filter(function (task) {\n    return moment(task.dateTimeStart, \"DD-MM-YYYY HH:mm\").format(\"DD-MM-YYYY\") === dateStart;\n  }).sort(function (a, b) {\n    return moment(a.dateTimeStart, \"DD-MM-YYYY HH:mm\").format('X') - moment(b.dateTimeStart, \"DD-MM-YYYY HH:mm\").format('X');\n  });\n};\n\nvar createDaysMonth = function createDaysMonth(selectDay) {\n  var daysInMonth = moment(selectDay, \"DD-MM-YYYY\").daysInMonth();\n  var days = [];\n\n  for (var i = 1; i <= daysInMonth; i++) {\n    days.push(moment(selectDay, \"DD-MM-YYYY\").date(i).format(\"DD-MM-YYYY\"));\n  }\n\n  return days;\n};\n\nexport var switchTabs = function switchTabs(tabKey, selectFirst) {\n  return function (dispatch) {\n    var selectDay = moment(selectFirst, \"DD-MM-YYYY\").date(+tabKey).format(\"DD-MM-YYYY\");\n    var tasksOnDay = searchTasks(selectDay);\n    dispatch({\n      type: \"TASKS_ON_DAY\",\n      payload: tasksOnDay\n    });\n    dispatch({\n      type: \"SWITCH_TAB\",\n      payload: {\n        selectTabs: tabKey,\n        selectDay: selectDay\n      }\n    });\n  };\n};\nexport var resetMonth = function resetMonth() {\n  return function (dispatch) {\n    var daysInMonth = moment().daysInMonth();\n    var selectDay = moment().format(\"DD-MM-YYYY\");\n    var selectTabs = moment().date();\n    var firstMonthDate = moment().date(1).format(\"DD-MM-YYYY\");\n    var lastMonthDate = moment().date(daysInMonth).format(\"DD-MM-YYYY\");\n    var daysMonth = createDaysMonth(selectDay);\n    var tasksOnDay = searchTasks(selectDay);\n    dispatch({\n      type: \"TASKS_ON_DAY\",\n      payload: tasksOnDay\n    });\n    dispatch({\n      type: \"RESET_MONTH\",\n      payload: {\n        daysInMonth: daysInMonth,\n        selectDay: selectDay,\n        selectTabs: selectTabs,\n        daysMonth: daysMonth,\n        firstMonthDate: firstMonthDate,\n        lastMonthDate: lastMonthDate\n      }\n    });\n  };\n};\nexport var nextMonth = function nextMonth(selectFirst) {\n  return function (dispatch) {\n    var daysInMonth = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").daysInMonth();\n    var firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").date(1).format(\"DD-MM-YYYY\");\n    var lastMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").date(daysInMonth).format(\"DD-MM-YYYY\");\n    var selectTabs = moment().month() === moment(firstMonthDate, \"DD-MM-YYYY\").month() && moment().year() === moment(firstMonthDate, \"DD-MM-YYYY\").year() ? moment().date() : 1;\n    var selectDay = moment(firstMonthDate, \"DD-MM-YYYY\").date(+selectTabs).format(\"DD-MM-YYYY\");\n    var daysMonth = createDaysMonth(selectDay);\n    var tasksOnDay = searchTasks(selectDay);\n    dispatch({\n      type: \"TASKS_ON_DAY\",\n      payload: tasksOnDay\n    });\n    dispatch({\n      type: \"RESET_MONTH\",\n      payload: {\n        daysInMonth: daysInMonth,\n        selectDay: selectDay,\n        selectTabs: selectTabs,\n        daysMonth: daysMonth,\n        firstMonthDate: firstMonthDate,\n        lastMonthDate: lastMonthDate\n      }\n    });\n  };\n};\nexport var prevMonth = function prevMonth(selectFirst) {\n  return function (dispatch) {\n    var daysInMonth = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, \"month\").daysInMonth();\n    var firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, \"month\").date(1).format(\"DD-MM-YYYY\");\n    var lastMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, \"month\").date(daysInMonth).format(\"DD-MM-YYYY\");\n    var selectTabs = moment().month() === moment(firstMonthDate, \"DD-MM-YYYY\").month() && moment().year() === moment(firstMonthDate, \"DD-MM-YYYY\").year() ? moment().date() : 1;\n    var selectDay = moment(firstMonthDate, \"DD-MM-YYYY\").date(+selectTabs).format(\"DD-MM-YYYY\");\n    var daysMonth = createDaysMonth(selectDay);\n    var tasksOnDay = searchTasks(selectDay);\n    dispatch({\n      type: \"TASKS_ON_DAY\",\n      payload: tasksOnDay\n    });\n    dispatch({\n      type: \"RESET_MONTH\",\n      payload: {\n        daysInMonth: daysInMonth,\n        selectDay: selectDay,\n        selectTabs: selectTabs,\n        daysMonth: daysMonth,\n        firstMonthDate: firstMonthDate,\n        lastMonthDate: lastMonthDate\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/actions/CalendarMonthAction.js"],"names":["getAllTasks","moment","searchTasks","dateStart","filter","task","dateTimeStart","format","sort","a","b","createDaysMonth","selectDay","daysInMonth","days","i","push","date","switchTabs","tabKey","selectFirst","dispatch","tasksOnDay","type","payload","selectTabs","resetMonth","firstMonthDate","lastMonthDate","daysMonth","nextMonth","add","month","year","prevMonth","subtract"],"mappings":"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","sourcesContent":["import {getAllTasks} from \"../apiService\";\nimport moment from 'moment';\nconst searchTasks = (dateStart) => getAllTasks().filter( task =>\n\tmoment(task.dateTimeStart, \"DD-MM-YYYY HH:mm\").format(\"DD-MM-YYYY\") === dateStart\n).sort(function(a, b){\n\treturn moment(a.dateTimeStart, \"DD-MM-YYYY HH:mm\").format('X')-moment(b.dateTimeStart, \"DD-MM-YYYY HH:mm\").format('X')\n})\n\n\nconst createDaysMonth = (selectDay) => {\n\tconst daysInMonth = moment(selectDay, \"DD-MM-YYYY\").daysInMonth();\n\tconst days = [];\n\tfor (var i = 1; i <= daysInMonth; i++){\n\t\tdays.push(moment(selectDay, \"DD-MM-YYYY\").date(i).format(\"DD-MM-YYYY\"))\n\t}\n\treturn days\n}\n\nexport const switchTabs = (tabKey, selectFirst) => dispatch => {\n\tconst selectDay = moment(selectFirst, \"DD-MM-YYYY\").date(+tabKey).format(\"DD-MM-YYYY\")\n\tconst tasksOnDay = searchTasks(selectDay);\n\tdispatch({\n\t\ttype: \"TASKS_ON_DAY\",\n\t\tpayload: tasksOnDay\n\t})\n\tdispatch({\n\t\ttype: \"SWITCH_TAB\",\n\t\tpayload:{\n\t\t\tselectTabs: tabKey,\n\t\t\tselectDay\n\t\t}\n\t})\n}\n\nexport const resetMonth = () => dispatch => {\n\tconst daysInMonth = moment().daysInMonth();\n\tconst selectDay = moment().format(\"DD-MM-YYYY\");\n\tconst selectTabs = moment().date();\n\tconst firstMonthDate = moment().date(1).format(\"DD-MM-YYYY\");\n\tconst lastMonthDate = moment().date(daysInMonth).format(\"DD-MM-YYYY\");\n\tconst daysMonth = createDaysMonth(selectDay);\n\tconst tasksOnDay = searchTasks(selectDay);\n\tdispatch({\n\t\ttype: \"TASKS_ON_DAY\",\n\t\tpayload: tasksOnDay\n\t})\n\tdispatch({\n\t\ttype: \"RESET_MONTH\",\n\t\tpayload: { daysInMonth, selectDay, selectTabs, daysMonth, firstMonthDate, lastMonthDate }\n\t})\n}\n\nexport const nextMonth = (selectFirst) => dispatch => {\n\tconst daysInMonth = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").daysInMonth();\n\tconst firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").date(1).format(\"DD-MM-YYYY\");\n\tconst lastMonthDate = moment(selectFirst, \"DD-MM-YYYY\").add(1, \"month\").date(daysInMonth).format(\"DD-MM-YYYY\");\n\tconst selectTabs = (\n\t\tmoment().month() ===  moment(firstMonthDate, \"DD-MM-YYYY\").month()\n\t\t&& moment().year() ===  moment(firstMonthDate, \"DD-MM-YYYY\").year()\n\t) ? moment().date() : 1;\n\tconst selectDay = moment(firstMonthDate, \"DD-MM-YYYY\").date(+selectTabs).format(\"DD-MM-YYYY\");\n\tconst daysMonth = createDaysMonth(selectDay);\n\tconst tasksOnDay = searchTasks(selectDay);\n\tdispatch({\n\t\ttype: \"TASKS_ON_DAY\",\n\t\tpayload: tasksOnDay\n\t})\n\tdispatch({\n\t\ttype: \"RESET_MONTH\",\n\t\tpayload: { daysInMonth, selectDay, selectTabs, daysMonth, firstMonthDate, lastMonthDate }\n\t})\n}\n\nexport const prevMonth = (selectFirst) => dispatch => {\n\tconst daysInMonth = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, \"month\").daysInMonth();\n\tconst firstMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, \"month\").date(1).format(\"DD-MM-YYYY\");\n\tconst lastMonthDate = moment(selectFirst, \"DD-MM-YYYY\").subtract(1, \"month\").date(daysInMonth).format(\"DD-MM-YYYY\");\n\tconst selectTabs = (\n\t\tmoment().month() ===  moment(firstMonthDate, \"DD-MM-YYYY\").month()\n\t\t&& moment().year() ===  moment(firstMonthDate, \"DD-MM-YYYY\").year()\n\t) ? moment().date() : 1;\n\tconst selectDay = moment(firstMonthDate, \"DD-MM-YYYY\").date(+selectTabs).format(\"DD-MM-YYYY\");\n\tconst daysMonth = createDaysMonth(selectDay);\n\tconst tasksOnDay = searchTasks(selectDay);\n\tdispatch({\n\t\ttype: \"TASKS_ON_DAY\",\n\t\tpayload: tasksOnDay\n\t})\n\tdispatch({\n\t\ttype: \"RESET_MONTH\",\n\t\tpayload: { daysInMonth, selectDay, selectTabs, daysMonth, firstMonthDate, lastMonthDate }\n\t})\n}\n"]},"metadata":{},"sourceType":"module"}