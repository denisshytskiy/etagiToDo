{"ast":null,"code":"import _classCallCheck from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/den/project/etagiToDo/src/components/ListTasks.js\";\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport moment from 'moment';\nimport FormTask from '../containers/FormTaskPage';\nimport './css/ListTask.css';\n\nvar ListTasks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListTasks, _Component);\n\n  function ListTasks() {\n    _classCallCheck(this, ListTasks);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListTasks).apply(this, arguments));\n  }\n\n  _createClass(ListTasks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var searchTasks = this.props.searchTasks;\n      searchTasks({\n        filterType: 'all',\n        selectedButton: 'all'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          tasks = _this$props.tasks,\n          formTask = _this$props.formTask,\n          addTask = _this$props.addTask,\n          sendEditTask = _this$props.sendEditTask,\n          searchTasks = _this$props.searchTasks,\n          cleanForm = _this$props.cleanForm,\n          selectedButton = _this$props.selectedButton,\n          editTask = _this$props.editTask,\n          delTask = _this$props.delTask;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(FormTask, {\n        sendEditTask: sendEditTask,\n        addTask: addTask,\n        formTask: formTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttonGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'all' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            selectedButton: 'all',\n            filterType: 'all'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"\\u0412\\u0441\\u0435\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'today' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            selectedButton: 'today',\n            filterType: 'day',\n            filterProps: moment().format(\"DD-MM-YYYY\")\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'tomorrow' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            selectedButton: 'tomorrow',\n            filterType: 'day',\n            filterProps: moment().add(1, 'day').format(\"DD-MM-YYYY\")\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0432\\u0442\\u0440\\u0430\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'week' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            selectedButton: 'week',\n            filterType: 'weekList'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\u041D\\u0435\\u0434\\u0435\\u043B\\u044F\"), React.createElement(Button, {\n        className: \"buttonGroup-button\",\n        size: \"small\",\n        variant: selectedButton === 'month' ? \"contained\" : \"outlined\",\n        onClick: function onClick() {\n          return searchTasks({\n            selectedButton: 'month',\n            filterType: 'monthList'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u041C\\u0435\\u0441\\u044F\\u0446\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return cleanForm(selectedButton);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        className: \"tableHeadName\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(TableCell, {\n        className: \"tableHeadDescription\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), React.createElement(TableCell, {\n        className: \"tableHeadDate\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430\"), React.createElement(TableCell, {\n        className: \"tableHeadDate\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F\"), React.createElement(TableCell, {\n        className: \"tableHeadDate\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"\\u0412\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, tasks.map(function (t) {\n        return React.createElement(TableRow, {\n          key: t.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, t.name), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, t.description), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, moment(t.dateStart).format('DD.MM.YYYY HH:mm')), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, moment(t.dateEnd).format('DD.MM.YYYY HH:mm')), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          color: \"secondary\",\n          badgeContent: t.important,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }))), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          onClick: function onClick() {\n            return editTask(t.id, selectedButton);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), React.createElement(Button, {\n          size: \"small\",\n          color: \"secondary\",\n          onClick: function onClick() {\n            return delTask(t.id, selectedButton);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));\n      })))));\n    }\n  }]);\n\n  return ListTasks;\n}(Component);\n\nexport default ListTasks;","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/components/ListTasks.js"],"names":["React","Component","Paper","Table","TableBody","TableCell","TableHead","TableRow","Button","Divider","Badge","MailIcon","moment","FormTask","ListTasks","searchTasks","props","filterType","selectedButton","tasks","formTask","addTask","sendEditTask","cleanForm","editTask","delTask","filterProps","format","add","map","t","id","name","description","dateStart","dateEnd","important"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport moment from 'moment';\nimport FormTask from '../containers/FormTaskPage';\n\nimport './css/ListTask.css'\n\nclass ListTasks extends Component {\n  componentDidMount() {\n    const { searchTasks } = this.props;\n    searchTasks({filterType: 'all', selectedButton: 'all'});\n  }\n  \n  render() {\n    const {\n      tasks, formTask, addTask, sendEditTask,\n      searchTasks, cleanForm, selectedButton, editTask, delTask\n    } = this.props;\n    return (\n      <div>\n        <Paper>\n        <div>\n          <FormTask\n            sendEditTask={sendEditTask}\n            addTask={addTask}\n            formTask={formTask}\n          />\n        </div>\n          <div className=\"buttonGroup\">\n            <div>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'all' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({selectedButton: 'all', filterType: 'all'})}\n              >\n                Все\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'today' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({ selectedButton: 'today', filterType: 'day', filterProps: moment().format(\"DD-MM-YYYY\")})}\n              >\n                Сегодня\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'tomorrow' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({ selectedButton: 'tomorrow', filterType: 'day', filterProps: moment().add(1, 'day').format(\"DD-MM-YYYY\")})}\n              >\n                Завтра\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'week' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({ selectedButton: 'week', filterType: 'weekList'})}\n\n              >\n                Неделя\n              </Button>\n              <Button\n                className=\"buttonGroup-button\"\n                size=\"small\"\n                variant={selectedButton === 'month' ? \"contained\" : \"outlined\"}\n                onClick={() => searchTasks({ selectedButton: 'month', filterType: 'monthList'})}\n              >\n                Месяц\n              </Button>\n            </div>\n            <div>\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => cleanForm(selectedButton)}\n              >\n                Создать задачу\n              </Button>\n            </div>\n          </div>\n          <Divider/>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell className=\"tableHeadName\" align=\"center\">\n                  Название\n                </TableCell>\n                <TableCell className=\"tableHeadDescription\" align=\"center\">\n                  Описание\n                </TableCell>\n                <TableCell className=\"tableHeadDate\" align=\"center\">\n                  Дата начала\n                </TableCell>\n                <TableCell className=\"tableHeadDate\" align=\"center\">\n                  Дата окончания\n                </TableCell>\n                <TableCell className=\"tableHeadDate\" align=\"center\">\n                  Важность\n                </TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tasks.map(t =>\n                <TableRow key={t.id}>\n                  <TableCell align=\"center\">{t.name}</TableCell>\n                  <TableCell align=\"center\">{t.description}</TableCell>\n                  <TableCell align=\"center\">{moment(t.dateStart).format('DD.MM.YYYY HH:mm')}</TableCell>\n                  <TableCell align=\"center\">{moment(t.dateEnd).format('DD.MM.YYYY HH:mm')}</TableCell>\n                  <TableCell align=\"center\">\n                    <Badge color=\"secondary\" badgeContent={t.important}>\n                      <MailIcon />\n                    </Badge></TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => editTask(t.id, selectedButton)}\n                    >\n                      Редактировать\n                    </Button>\n                    <Button\n                      size=\"small\"\n                      color=\"secondary\"\n                      onClick={() => delTask(t.id, selectedButton)}\n                    >\n                      Удалить\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default ListTasks;\n"]},"metadata":{},"sourceType":"module"}