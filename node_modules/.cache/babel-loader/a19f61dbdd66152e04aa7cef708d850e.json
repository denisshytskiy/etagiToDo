{"ast":null,"code":"import _objectSpread from \"/home/den/project/etagiToDo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { getAllTasks, deleteTask, putTask } from \"../apiService\";\nimport moment from 'moment';\nimport { SWITCH_BUTTON } from \"../reducers/listTaskReducers\";\nexport var TASK = \"GET_TASKS\";\nexport var FILTER_TASKS = \"FILTER_TASKS\";\nexport var EDIT_TASK = \"EDIT_TASK\";\nexport var CLEAN_FORM = \"CLEAN_FORM\";\nexport var IS_OPEN_FORM = \"IS_OPEN_FORM\";\n\nvar searchTasksForOneDay = function searchTasksForOneDay(date) {\n  return getAllTasks().filter(function (task) {\n    return moment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === date;\n  });\n};\n\nexport var delTask = function delTask(id) {\n  return function (dispatch) {\n    deleteTask(id);\n    var tasks = getAllTasks();\n    dispatch({\n      type: TASK,\n      payload: tasks\n    });\n  };\n};\nexport var editTask = function editTask(id) {\n  return function (dispatch) {\n    var tasks = getAllTasks().filter(function (t) {\n      return t.id === id;\n    })[0];\n    dispatch({\n      type: EDIT_TASK,\n      payload: tasks\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var editTaskFromForm = function editTaskFromForm(body) {\n  return function (dispatch) {\n    var cleanBody = _objectSpread({}, body);\n\n    delete cleanBody.type;\n    putTask(cleanBody);\n    var tasks = getAllTasks();\n    dispatch({\n      type: TASK,\n      payload: tasks\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var cleanForm = function cleanForm() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAN_FORM\n    });\n    dispatch({\n      type: IS_OPEN_FORM,\n      payload: true\n    });\n  };\n};\nexport var searchTasks = function searchTasks(filter) {\n  return function (dispatch) {\n    var selectedButton = filter.selectedButton;\n    var tasks = getAllTasks(filter);\n    dispatch({\n      type: FILTER_TASKS,\n      payload: tasks\n    });\n    dispatch({\n      type: SWITCH_BUTTON,\n      payload: selectedButton\n    });\n  };\n};","map":{"version":3,"sources":["/home/den/project/etagiToDo/src/actions/listTasksAction.js"],"names":["getAllTasks","deleteTask","putTask","moment","SWITCH_BUTTON","TASK","FILTER_TASKS","EDIT_TASK","CLEAN_FORM","IS_OPEN_FORM","searchTasksForOneDay","date","filter","task","dateStart","format","delTask","id","dispatch","tasks","type","payload","editTask","t","editTaskFromForm","body","cleanBody","cleanForm","searchTasks","selectedButton"],"mappings":"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","sourcesContent":["import { getAllTasks, deleteTask, putTask } from \"../apiService\";\nimport moment from 'moment';\nimport {SWITCH_BUTTON} from \"../reducers/listTaskReducers\";\n\nexport const TASK = \"GET_TASKS\";\nexport const FILTER_TASKS = \"FILTER_TASKS\";\nexport const EDIT_TASK = \"EDIT_TASK\";\nexport const CLEAN_FORM = \"CLEAN_FORM\";\nexport const IS_OPEN_FORM = \"IS_OPEN_FORM\";\n\nconst searchTasksForOneDay = (date) => getAllTasks().filter( task =>\n  moment(task.dateStart, \"YYYY-MM-DDTHH:mm\").format(\"DD-MM-YYYY\") === date\n);\n\nexport const delTask = (id) => dispatch => {\n  deleteTask(id);\n  const tasks = getAllTasks();\n  dispatch({ type: TASK, payload: tasks })\n};\n\nexport const editTask = (id) => dispatch => {\n  const tasks = getAllTasks().filter(t => t.id === id)[0];\n  dispatch({ type: EDIT_TASK, payload: tasks });\n  dispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const editTaskFromForm = (body) => dispatch => {\n  const cleanBody = {...body};\n  delete cleanBody.type;\n  putTask(cleanBody);\n  const tasks = getAllTasks();\n  dispatch({ type: TASK, payload: tasks });\n  dispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const cleanForm = () => dispatch => {\n  dispatch({ type: CLEAN_FORM });\n  dispatch({ type: IS_OPEN_FORM, payload: true });\n};\n\nexport const searchTasks = (filter) => dispatch => {\n  const { selectedButton } = filter;\n  const tasks = getAllTasks(filter);\n  dispatch({\n    type: FILTER_TASKS,\n    payload: tasks\n  });\n  dispatch({\n    type: SWITCH_BUTTON,\n    payload: selectedButton\n  });\n};\n"]},"metadata":{},"sourceType":"module"}